syntax = "proto3";

package eval_ad45335_dac;

// Implement your grpc proto file here.
// Introduction to gRPC: https://grpc.io/docs/what-is-grpc/introduction/

service DAC {
  rpc SendVoltage (Voltage) returns (VoltageReply) {}
  rpc SendChannelConfig (ChannelConfig) returns (ChannelConfigReply) {}
  rpc SendCompleteConfig (CompleteConfig) returns (ConfigReply) {}
}

message Voltage {
  double voltage = 1;
}

message VoltageReply {
  double wattage = 1;
}

// Channel configuration without actual settings
message ChannelConfig {
  DeflectorChannels pre_stack_deflector_channels = 1;
  int32 stack_einzel_channel = 2;
  DeflectorChannels post_stack_deflector_channels = 3;
  int32 horizontal_bender_einzel_channel = 4;
  QuadrupoleBenderChannels quadrupole_bender_channels = 5;
}

message ChannelConfigReply {
  bool success = 1;
  string message = 2;
}

// Complete configuration with both channels and settings
message CompleteConfig {
  Controls controls = 1;
}

message ConfigReply {
  bool success = 1;
  string message = 2;
}

// Deflector channels only
message DeflectorChannels {
  int32 x_minus_channel = 1;
  int32 x_plus_channel = 2;
  int32 z_minus_channel = 3;
  int32 z_plus_channel = 4;
}

// Quadrupole bender channels only
message QuadrupoleBenderChannels {
  int32 bend_ions_plus_channel = 1;
  int32 bend_ions_minus_channel = 2;
}

// Original messages for complete controls
message Controls {
  StackDeflector pre_stack_deflector = 1;
  StackEinzel stack_einzel = 2;
  StackDeflector post_stack_deflector = 3;
  HorizontalBenderEinzel horizontal_bender_einzel = 4;
  QuadrupoleBender quadrupole_bender = 5;
}

// Modified to separate channels into their own message
message DeflectionSetting {
  double x = 1;
  double z = 2;
  // Channels moved to DeflectorChannels message
}

message StackDeflector {
  DeflectionSetting deflection_setting = 1;
  DeflectorChannels channels = 2;
  double dead_zone = 3;
  double sensitivity = 4;
  bool locked = 5;
}

message StackEinzel {
  int64 focus = 1;
  int32 channel = 2;
}

message HorizontalBenderEinzel {
  int64 focus = 1;
  int32 channel = 2;
}

message QuadrupoleBender {
  int64 bend = 1;
  QuadrupoleBenderChannels channels = 2;
}
